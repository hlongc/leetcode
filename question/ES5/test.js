var b = 10;
(function b() {
  b = 20;
  console.log(b);
})();

/**
 * 解析：
 * 这段代码的输出是"函数本身"（函数b的定义）。
 *
 * 详细分析：
 * 1. 首先，定义了一个全局变量 b 并赋值为 10
 *
 * 2. 接着定义了一个"具名函数表达式"(Named Function Expression)，函数名为b，并立即执行
 *
 * 3. 在具名函数表达式内部，函数名称（这里是b）是不可改变的（在严格模式下尝试修改会报错）
 *    这是因为在函数内部，函数名标识符是一个只读的"常量"，它指向函数本身
 *
 * 4. 所以函数内部的 b = 20 这一赋值语句实际上不起作用，b仍然指向函数本身
 *
 * 5. 因此，console.log(b) 输出的是函数对象本身，而不是数字20
 *
 * 要点解释：
 *
 * - 具名函数表达式的函数名在其函数体内部形成一个局部变量，且这个变量是只读的
 *
 * - 这与函数声明(Function Declaration)不同，函数声明形式为：function b() {}
 *
 * - 只读特性在ES5及之后的JavaScript版本中明确规定，作为规范的一部分
 *
 * - 若要在函数内部访问全局的b变量，可以使用window.b（在浏览器环境中）
 *
 * 延伸知识：
 *
 * 如果改写为：
 * var b = 10;
 * (function() {
 *   var b = 20;
 *   console.log(b);
 * })();
 *
 * 则会输出20，因为这是一个匿名函数表达式，内部定义了新的局部变量b
 */
